===

model Invoice {
    fields {
        reference Text @sequence("INV-")
    }
}

===

CREATE TABLE "identity" (
"email" TEXT,
"email_verified" BOOL NOT NULL DEFAULT false,
"password" TEXT,
"external_id" TEXT,
"issuer" TEXT,
"name" TEXT,
"given_name" TEXT,
"family_name" TEXT,
"middle_name" TEXT,
"nick_name" TEXT,
"profile" TEXT,
"picture" TEXT,
"website" TEXT,
"gender" TEXT,
"zone_info" TEXT,
"locale" TEXT,
"id" TEXT NOT NULL DEFAULT ksuid(),
"created_at" TIMESTAMPTZ NOT NULL DEFAULT now(),
"updated_at" TIMESTAMPTZ NOT NULL DEFAULT now()
);
ALTER TABLE "identity" ADD CONSTRAINT identity_id_pkey PRIMARY KEY ("id");
ALTER TABLE "identity" ADD CONSTRAINT identity_email_issuer_udx UNIQUE ("email", "issuer");
CREATE TABLE "invoice" (
"reference__sequence" BIGINT GENERATED ALWAYS AS IDENTITY ( START WITH 1 MINVALUE 1 ),
"reference" TEXT GENERATED ALWAYS AS ('INV-' || LPAD("reference__sequence"::TEXT, 4, '0')) STORED,
"id" TEXT NOT NULL DEFAULT ksuid(),
"created_at" TIMESTAMPTZ NOT NULL DEFAULT now(),
"updated_at" TIMESTAMPTZ NOT NULL DEFAULT now()
);
ALTER TABLE "invoice" ADD CONSTRAINT invoice_reference_udx UNIQUE ("reference");
ALTER TABLE "invoice" ADD CONSTRAINT invoice_id_pkey PRIMARY KEY ("id");
CREATE TABLE "keel_audit" (
"id" TEXT NOT NULL DEFAULT ksuid(),
"table_name" TEXT NOT NULL,
"op" TEXT NOT NULL,
"data" jsonb NOT NULL,
"created_at" TIMESTAMPTZ NOT NULL DEFAULT now(),
"identity_id" TEXT,
"trace_id" TEXT,
"event_processed_at" TIMESTAMPTZ
);
ALTER TABLE "keel_audit" ADD CONSTRAINT keel_audit_id_pkey PRIMARY KEY ("id");
CREATE TRIGGER invoice_create AFTER INSERT ON "invoice" REFERENCING NEW TABLE AS new_table FOR EACH STATEMENT EXECUTE PROCEDURE process_audit();
CREATE TRIGGER invoice_update AFTER UPDATE ON "invoice" REFERENCING NEW TABLE AS new_table OLD TABLE AS old_table FOR EACH STATEMENT EXECUTE PROCEDURE process_audit();
CREATE TRIGGER invoice_delete AFTER DELETE ON "invoice" REFERENCING OLD TABLE AS old_table FOR EACH STATEMENT EXECUTE PROCEDURE process_audit();
CREATE TRIGGER invoice_updated_at BEFORE UPDATE ON "invoice" FOR EACH ROW EXECUTE PROCEDURE set_updated_at();
CREATE TRIGGER identity_create AFTER INSERT ON "identity" REFERENCING NEW TABLE AS new_table FOR EACH STATEMENT EXECUTE PROCEDURE process_audit();
CREATE TRIGGER identity_update AFTER UPDATE ON "identity" REFERENCING NEW TABLE AS new_table OLD TABLE AS old_table FOR EACH STATEMENT EXECUTE PROCEDURE process_audit();
CREATE TRIGGER identity_delete AFTER DELETE ON "identity" REFERENCING OLD TABLE AS old_table FOR EACH STATEMENT EXECUTE PROCEDURE process_audit();
CREATE TRIGGER identity_updated_at BEFORE UPDATE ON "identity" FOR EACH ROW EXECUTE PROCEDURE set_updated_at();

===

[
    {"Model":"Identity","Field":"","Type":"ADDED"},
    {"Model":"Invoice","Field":"","Type":"ADDED"},
    {"Model":"KeelAudit","Field":"","Type":"ADDED"}
]
