model Person {
    fields {
        name Text
        email Text
        verifiedEmail Boolean @default(false)
        verifiedUpdate Boolean @default(false)
    }

    actions {
        create createPerson() with (name, email) {
            @permission(expression: true)
        }
        create createPersonFn() with (name, email) {
            @permission(expression: true)
            @function
        }
        get getPerson(id) {
            @permission(expression: true)
        }
        write writeRandomPersons(Any) returns (Any) {
            @permission(expression: true)
        }
    }

    @on(
        [create],
        verifyEmail
    )

    @on(
        [update],
        verifyUpdate
    )
}

model Tracker {
    fields {
        views Number @default(0)
        verifiedUpdate Boolean @default(true)
    }
    actions {
        update updateViews(id) with (views) {
            @set(tracker.verifiedUpdate = false)
            @permission(expression: true)
        }
        write updateTrackers(Any) returns (Any) {
            @permission(expression: true)
        }
    }

    @on(
        [update],
        verifyUpdate
    )
}

job CreateRandomPersons {
    inputs {
        raiseException Boolean
    }

    @permission(expression: true)
}

api Web {
    models {
        Person
    }
}
